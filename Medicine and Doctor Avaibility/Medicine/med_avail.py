# -*- coding: utf-8 -*-
"""Med_avail.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ci8RSwK7mVOP8Oyls3hPxEP37DXHF8yb
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

data = {
    'Medicine':['Amlodipine', 'Diltiazem', 'Alendronate', 'Risedronate', 'Minocycline', 'Accutane', 'Ibuprofen', 'Crocine', 'Activella', 'Addyi', 'Risedronate', 'Minocycline', 'Accutane', 'Crocine'],
    'Batch':['ABC123', 'XYZ456', 'OPQ321', 'JKL654', 'MNO987', 'DEF321', 'GHI654', 'PQR987', 'STU123', 'LMN111', 'XYZ222', 'MNO666', 'STU999', 'OPQ000'],
    'Dosage':['Tablet', 'Capsule', 'Tablet', 'Liquid', 'Capsule', 'Tablet', 'Liquid', 'Capsule', 'Tablet', 'Liquid', 'Liquid', 'Tablet', 'Liquid', 'Capsule'],
    'Location':['Mumbai', 'Delhi', 'Chennai', 'Hyderabad', 'Bangalore', 'Kanpur', 'Ahmedabad', 'Pune', 'Delhi', 'Mumbai', 'Chennai', 'Pune', 'Ahmedabad', 'Kanpur'],
    'Date':['12/04/2022', '17/04/2022', '22/04/2022', '27/04/2022', '03/05/2022', '08/05/2022', '13/05/2022', '18/05/2022', '23/05/2022', '28/05/2022', '02/06/2022', '07/06/2022', '12/06/2022', '17/06/2022'],
    'Availability':['Yes', 'No', 'Yes', 'No', 'Yes', 'No', 'Yes', 'No', 'Yes','No', 'Yes', 'No','Yes','Yes']
}
from sklearn.preprocessing import LabelEncoder
# Label encode the text columns
label_encoder = LabelEncoder()
data['Medicine'] = label_encoder.fit_transform(data['Medicine'])
data['Batch'] = label_encoder.fit_transform(data['Batch'])
data['Dosage'] = label_encoder.fit_transform(data['Dosage'])
data['Date'] = label_encoder.fit_transform(data['Date'])
data['Location'] = label_encoder.fit_transform(data['Location'])
data['Availability'] = label_encoder.fit_transform(data['Availability'])
df = pd.DataFrame(data)

print(data)

X = df[['Medicine', 'Dosage', 'Location']]
y = df['Availability']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_pred=rf_model.fit(X_train, y_train)
y_pred = rf_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy:.2f}')
print(f'Classification Report:\n{report}')

import pickle
pickle.dump(rf_pred,open('model.pkl','wb'))
model=pickle.load(open('model.pkl','rb'))

